{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement, j as forceUpdate } from './index-88bdeaae.js';\nimport { c as config, b as getIonMode } from './ionic-global-00475c3a.js';\nimport { p as pointerCoord, a as addEventListener, b as removeEventListener } from './helpers-4d272360.js';\nimport { i as isRTL } from './dir-e8b767a8.js';\nimport { c as createColorClasses, h as hostContext } from './theme-7670341c.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.didInit = false;\n    this.activated = false;\n    /**\n     * If `true`, the user cannot interact with the segment.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the segment buttons will overflow and the user can swipe to see them.\n     * In addition, this will disable the gesture to drag the indicator between the buttons\n     * in order to swipe to see hidden buttons.\n     */\n    this.scrollable = false;\n    /**\n     * If `true`, users will be able to swipe between segment buttons to activate them.\n     */\n    this.swipeGesture = true;\n    /**\n     * If `true`, navigating to an `ion-segment-button` with the keyboard will focus and select the element.\n     * If `false`, keyboard navigation will only focus the `ion-segment-button` element.\n     */\n    this.selectOnFocus = false;\n    this.onClick = (ev) => {\n      const current = ev.target;\n      const previous = this.checked;\n      // If the current element is a segment then that means\n      // the user tried to swipe to a segment button and\n      // click a segment button at the same time so we should\n      // not update the checked segment button\n      if (current.tagName === 'ION-SEGMENT') {\n        return;\n      }\n      this.value = current.value;\n      if (this.scrollable || !this.swipeGesture) {\n        if (previous) {\n          this.checkButton(previous, current);\n        }\n        else {\n          this.setCheckedClasses();\n        }\n      }\n      this.checked = current;\n    };\n    this.getSegmentButton = (selector) => {\n      const buttons = this.getButtons().filter((button) => !button.disabled);\n      const currIndex = buttons.findIndex((button) => button === document.activeElement);\n      switch (selector) {\n        case 'first':\n          return buttons[0];\n        case 'last':\n          return buttons[buttons.length - 1];\n        case 'next':\n          return buttons[currIndex + 1] || buttons[0];\n        case 'previous':\n          return buttons[currIndex - 1] || buttons[buttons.length - 1];\n        default:\n          return null;\n      }\n    };\n  }\n  colorChanged(value, oldValue) {\n    /**\n     * If color is set after not having\n     * previously been set (or vice versa),\n     * we need to emit style so the segment-buttons\n     * can apply their color classes properly.\n     */\n    if ((oldValue === undefined && value !== undefined) || (oldValue !== undefined && value === undefined)) {\n      this.emitStyle();\n    }\n  }\n  swipeGestureChanged() {\n    this.gestureChanged();\n  }\n  valueChanged(value, oldValue) {\n    this.ionSelect.emit({ value });\n    if (oldValue !== '' || this.didInit) {\n      if (!this.activated) {\n        this.ionChange.emit({ value });\n      }\n      else {\n        this.valueAfterGesture = value;\n      }\n    }\n  }\n  disabledChanged() {\n    this.gestureChanged();\n    const buttons = this.getButtons();\n    for (const button of buttons) {\n      button.disabled = this.disabled;\n    }\n  }\n  gestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\n    }\n  }\n  connectedCallback() {\n    this.emitStyle();\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  async componentDidLoad() {\n    this.setCheckedClasses();\n    this.ensureFocusable();\n    this.gesture = (await import('./index-3f1a7d95.js')).createGesture({\n      el: this.el,\n      gestureName: 'segment',\n      gesturePriority: 100,\n      threshold: 0,\n      passive: false,\n      onStart: (ev) => this.onStart(ev),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: (ev) => this.onEnd(ev),\n    });\n    this.gestureChanged();\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    this.didInit = true;\n  }\n  onStart(detail) {\n    this.activate(detail);\n  }\n  onMove(detail) {\n    this.setNextIndex(detail);\n  }\n  onEnd(detail) {\n    this.setActivated(false);\n    const checkedValidButton = this.setNextIndex(detail, true);\n    detail.event.stopImmediatePropagation();\n    if (checkedValidButton) {\n      this.addRipple(detail);\n    }\n    const value = this.valueAfterGesture;\n    if (value !== undefined) {\n      this.ionChange.emit({ value });\n      this.valueAfterGesture = undefined;\n    }\n  }\n  getButtons() {\n    return Array.from(this.el.querySelectorAll('ion-segment-button'));\n  }\n  /**\n   * The gesture blocks the segment button ripple. This\n   * function adds the ripple based on the checked segment\n   * and where the cursor ended.\n   */\n  addRipple(detail) {\n    const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n    if (!useRippleEffect) {\n      return;\n    }\n    const buttons = this.getButtons();\n    const checked = buttons.find((button) => button.value === this.value);\n    const root = checked.shadowRoot || checked;\n    const ripple = root.querySelector('ion-ripple-effect');\n    if (!ripple) {\n      return;\n    }\n    const { x, y } = pointerCoord(detail.event);\n    ripple.addRipple(x, y).then((remove) => remove());\n  }\n  /*\n   * Activate both the segment and the buttons\n   * due to a bug with ::slotted in Safari\n   */\n  setActivated(activated) {\n    const buttons = this.getButtons();\n    buttons.forEach((button) => {\n      if (activated) {\n        button.classList.add('segment-button-activated');\n      }\n      else {\n        button.classList.remove('segment-button-activated');\n      }\n    });\n    this.activated = activated;\n  }\n  activate(detail) {\n    const clicked = detail.event.target;\n    const buttons = this.getButtons();\n    const checked = buttons.find((button) => button.value === this.value);\n    // Make sure we are only checking for activation on a segment button\n    // since disabled buttons will get the click on the segment\n    if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n      return;\n    }\n    // If there are no checked buttons, set the current button to checked\n    if (!checked) {\n      this.value = clicked.value;\n      this.setCheckedClasses();\n    }\n    // If the gesture began on the clicked button with the indicator\n    // then we should activate the indicator\n    if (this.value === clicked.value) {\n      this.setActivated(true);\n    }\n  }\n  getIndicator(button) {\n    const root = button.shadowRoot || button;\n    return root.querySelector('.segment-button-indicator');\n  }\n  checkButton(previous, current) {\n    const previousIndicator = this.getIndicator(previous);\n    const currentIndicator = this.getIndicator(current);\n    if (previousIndicator === null || currentIndicator === null) {\n      return;\n    }\n    const previousClientRect = previousIndicator.getBoundingClientRect();\n    const currentClientRect = currentIndicator.getBoundingClientRect();\n    const widthDelta = previousClientRect.width / currentClientRect.width;\n    const xPosition = previousClientRect.left - currentClientRect.left;\n    // Scale the indicator width to match the previous indicator width\n    // and translate it on top of the previous indicator\n    const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n    writeTask(() => {\n      // Remove the transition before positioning on top of the previous indicator\n      currentIndicator.classList.remove('segment-button-indicator-animated');\n      currentIndicator.style.setProperty('transform', transform);\n      // Force a repaint to ensure the transform happens\n      currentIndicator.getBoundingClientRect();\n      // Add the transition to move the indicator into place\n      currentIndicator.classList.add('segment-button-indicator-animated');\n      // Remove the transform to slide the indicator back to the button clicked\n      currentIndicator.style.setProperty('transform', '');\n    });\n    this.value = current.value;\n    this.setCheckedClasses();\n  }\n  setCheckedClasses() {\n    const buttons = this.getButtons();\n    const index = buttons.findIndex((button) => button.value === this.value);\n    const next = index + 1;\n    // Keep track of the currently checked button\n    this.checked = buttons.find((button) => button.value === this.value);\n    for (const button of buttons) {\n      button.classList.remove('segment-button-after-checked');\n    }\n    if (next < buttons.length) {\n      buttons[next].classList.add('segment-button-after-checked');\n    }\n  }\n  setNextIndex(detail, isEnd = false) {\n    const rtl = isRTL(this.el);\n    const activated = this.activated;\n    const buttons = this.getButtons();\n    const index = buttons.findIndex((button) => button.value === this.value);\n    const previous = buttons[index];\n    let current;\n    let nextIndex;\n    if (index === -1) {\n      return;\n    }\n    // Get the element that the touch event started on in case\n    // it was the checked button, then we will move the indicator\n    const rect = previous.getBoundingClientRect();\n    const left = rect.left;\n    const width = rect.width;\n    // Get the element that the gesture is on top of based on the currentX of the\n    // gesture event and the Y coordinate of the starting element, since the gesture\n    // can move up and down off of the segment\n    const currentX = detail.currentX;\n    const previousY = rect.top + rect.height / 2;\n    /**\n     * Segment can be used inside the shadow dom\n     * so doing document.elementFromPoint would never\n     * return a segment button in that instance.\n     * We use getRootNode to which will return the parent\n     * shadow root if used inside a shadow component and\n     * returns document otherwise.\n     */\n    const root = this.el.getRootNode();\n    const nextEl = root.elementFromPoint(currentX, previousY);\n    const decreaseIndex = rtl ? currentX > left + width : currentX < left;\n    const increaseIndex = rtl ? currentX < left : currentX > left + width;\n    // If the indicator is currently activated then we have started the gesture\n    // on top of the checked button so we need to slide the indicator\n    // by checking the button next to it as we move\n    if (activated && !isEnd) {\n      // Decrease index, move left in LTR & right in RTL\n      if (decreaseIndex) {\n        const newIndex = index - 1;\n        if (newIndex >= 0) {\n          nextIndex = newIndex;\n        }\n        // Increase index, moves right in LTR & left in RTL\n      }\n      else if (increaseIndex) {\n        if (activated && !isEnd) {\n          const newIndex = index + 1;\n          if (newIndex < buttons.length) {\n            nextIndex = newIndex;\n          }\n        }\n      }\n      if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n        current = buttons[nextIndex];\n      }\n    }\n    // If the indicator is not activated then we will just set the indicator\n    // to the element where the gesture ended\n    if (!activated && isEnd) {\n      current = nextEl;\n    }\n    if (current != null) {\n      /**\n       * If current element is ion-segment then that means\n       * user tried to select a disabled ion-segment-button,\n       * and we should not update the ripple.\n       */\n      if (current.tagName === 'ION-SEGMENT') {\n        return false;\n      }\n      if (previous !== current) {\n        this.checkButton(previous, current);\n      }\n    }\n    return true;\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      segment: true,\n    });\n  }\n  onKeyDown(ev) {\n    const rtl = isRTL(this.el);\n    let keyDownSelectsButton = this.selectOnFocus;\n    let current;\n    switch (ev.key) {\n      case 'ArrowRight':\n        ev.preventDefault();\n        current = rtl ? this.getSegmentButton('previous') : this.getSegmentButton('next');\n        break;\n      case 'ArrowLeft':\n        ev.preventDefault();\n        current = rtl ? this.getSegmentButton('next') : this.getSegmentButton('previous');\n        break;\n      case 'Home':\n        ev.preventDefault();\n        current = this.getSegmentButton('first');\n        break;\n      case 'End':\n        ev.preventDefault();\n        current = this.getSegmentButton('last');\n        break;\n      case ' ':\n      case 'Enter':\n        ev.preventDefault();\n        current = document.activeElement;\n        keyDownSelectsButton = true;\n    }\n    if (!current) {\n      return;\n    }\n    if (keyDownSelectsButton) {\n      const previous = this.checked || current;\n      this.checkButton(previous, current);\n    }\n    current.focus();\n  }\n  /* By default, focus is delegated to the selected `ion-segment-button`.\n   * If there is no selected button, focus will instead pass to the first child button.\n   **/\n  ensureFocusable() {\n    var _a;\n    if (this.value !== undefined) {\n      return;\n    }\n    const buttons = this.getButtons();\n    (_a = buttons[0]) === null || _a === void 0 ? void 0 : _a.setAttribute('tabindex', '0');\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"tablist\", onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'segment-activated': this.activated,\n        'segment-disabled': this.disabled,\n        'segment-scrollable': this.scrollable,\n      }) }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"color\": [\"colorChanged\"],\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nSegment.style = {\n  ios: segmentIosCss,\n  md: segmentMdCss\n};\n\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\n\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\n\nlet ids = 0;\nconst SegmentButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.segmentEl = null;\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the segment button.\n     */\n    this.disabled = false;\n    /**\n     * Set the layout of the text and icon in the segment.\n     */\n    this.layout = 'icon-top';\n    /**\n     * The type of the button.\n     */\n    this.type = 'button';\n    /**\n     * The value of the segment button.\n     */\n    this.value = 'ion-sb-' + ids++;\n    this.updateStyle = () => {\n      forceUpdate(this);\n    };\n    this.updateState = () => {\n      if (this.segmentEl) {\n        this.checked = this.segmentEl.value === this.value;\n      }\n    };\n  }\n  connectedCallback() {\n    const segmentEl = (this.segmentEl = this.el.closest('ion-segment'));\n    if (segmentEl) {\n      this.updateState();\n      addEventListener(segmentEl, 'ionSelect', this.updateState);\n      addEventListener(segmentEl, 'ionStyle', this.updateStyle);\n    }\n  }\n  disconnectedCallback() {\n    const segmentEl = this.segmentEl;\n    if (segmentEl) {\n      removeEventListener(segmentEl, 'ionSelect', this.updateState);\n      removeEventListener(segmentEl, 'ionStyle', this.updateStyle);\n      this.segmentEl = null;\n    }\n  }\n  get hasLabel() {\n    return !!this.el.querySelector('ion-label');\n  }\n  get hasIcon() {\n    return !!this.el.querySelector('ion-icon');\n  }\n  get tabIndex() {\n    return this.checked && !this.disabled ? 0 : -1;\n  }\n  render() {\n    const { checked, type, disabled, hasIcon, hasLabel, layout, segmentEl, tabIndex } = this;\n    const mode = getIonMode(this);\n    const hasSegmentColor = () => (segmentEl === null || segmentEl === void 0 ? void 0 : segmentEl.color) !== undefined;\n    return (h(Host, { role: \"tab\", \"aria-selected\": checked ? 'true' : 'false', \"aria-disabled\": disabled ? 'true' : null, tabIndex: tabIndex, class: {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'in-segment': hostContext('ion-segment', this.el),\n        'in-segment-color': hasSegmentColor(),\n        'segment-button-has-label': hasLabel,\n        'segment-button-has-icon': hasIcon,\n        'segment-button-has-label-only': hasLabel && !hasIcon,\n        'segment-button-has-icon-only': hasIcon && !hasLabel,\n        'segment-button-disabled': disabled,\n        'segment-button-checked': checked,\n        [`segment-button-layout-${layout}`]: true,\n        'ion-activatable': true,\n        'ion-activatable-instant': true,\n        'ion-focusable': true,\n      } }, h(\"button\", { type: type, tabIndex: -1, class: \"button-native\", part: \"native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n        'segment-button-indicator': true,\n        'segment-button-indicator-animated': true,\n      } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n  }\n  get el() { return getElement(this); }\n};\nSegmentButton.style = {\n  ios: segmentButtonIosCss,\n  md: segmentButtonMdCss\n};\n\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n"],"names":["r","registerInstance","e","createEvent","c","writeTask","h","H","Host","i","getElement","j","forceUpdate","config","b","getIonMode","p","pointerCoord","a","addEventListener","removeEventListener","isRTL","createColorClasses","hostContext","segmentIosCss","segmentMdCss","Segment","hostRef","ionChange","ionSelect","ionStyle","didInit","activated","disabled","scrollable","swipeGesture","selectOnFocus","onClick","ev","current","target","previous","checked","tagName","value","checkButton","setCheckedClasses","getSegmentButton","selector","buttons","getButtons","filter","button","currIndex","findIndex","document","activeElement","length","oldValue","undefined","emitStyle","gestureChanged","emit","valueAfterGesture","gesture","enable","ensureFocusable","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","disabledChanged","detail","activate","setNextIndex","setActivated","checkedValidButton","event","stopImmediatePropagation","addRipple","Array","from","querySelectorAll","useRippleEffect","getBoolean","find","root","shadowRoot","ripple","querySelector","x","y","then","remove","forEach","classList","add","clicked","previousIndicator","getIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","style","setProperty","index","next","isEnd","rtl","nextIndex","rect","currentX","previousY","top","height","getRootNode","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","segment","keyDownSelectsButton","key","preventDefault","focus","_a","setAttribute","mode","role","class","color","ios","md","segmentButtonIosCss","segmentButtonMdCss","ids","SegmentButton","segmentEl","layout","type","updateStyle","updateState","closest","hasIcon","hasLabel","tabIndex","hasSegmentColor","part","ion_segment","ion_segment_button"],"sourceRoot":"webpack:///"}