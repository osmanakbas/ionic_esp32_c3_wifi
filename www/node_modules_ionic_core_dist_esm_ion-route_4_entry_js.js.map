{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-route_4_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-88bdeaae.js';\nimport { c as componentOnReady, q as debounce } from './helpers-4d272360.js';\nimport { b as getIonMode } from './ionic-global-00475c3a.js';\nimport { o as openURL, c as createColorClasses } from './theme-7670341c.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n/** Join the non empty segments with \"/\". */\nconst generatePath = (segments) => {\n  const path = segments.filter((s) => s.length > 0).join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writeSegments = (history, root, useHash, segments, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...segments], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\n/**\n * Transforms a chain to a list of segments.\n *\n * Notes:\n * - parameter segments of the form :param are replaced with their value,\n * - null is returned when a value is missing for any parameter segment.\n */\nconst chainToSegments = (chain) => {\n  const segments = [];\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        segments.push(param);\n      }\n      else if (segment !== '') {\n        segments.push(segment);\n      }\n    }\n  }\n  return segments;\n};\n/**\n * Removes the prefix segments from the path segments.\n *\n * Return:\n * - null when the path segments do not start with the passed prefix,\n * - the path segments after the prefix otherwise.\n */\nconst removePrefix = (prefix, segments) => {\n  if (prefix.length > segments.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return segments;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== segments[i]) {\n      return null;\n    }\n  }\n  if (segments.length === prefix.length) {\n    return [''];\n  }\n  return segments.slice(prefix.length);\n};\nconst readSegments = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const segments = parsePath(pathname).segments;\n  return removePrefix(prefix, segments);\n};\n/**\n * Parses the path to:\n * - segments an array of '/' separated parts,\n * - queryString (undefined when no query string).\n */\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substring(qsStart + 1);\n      path = path.substring(0, qsStart);\n    }\n    segments = path\n      .split('/')\n      .map((s) => s.trim())\n      .filter((s) => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const segments = [];\n    chain.forEach((r) => segments.push(...r.segments));\n    const ids = chain.map((r) => r.id);\n    console.debug(`%c ${generatePath(segments)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\n/**\n * Activates the passed route chain.\n *\n * There must be exactly one outlet per route entry in the chain.\n *\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\n * setRouteId will create or select the view in the outlet.\n */\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise((resolve) => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\n/**\n * Recursively walks the outlet in the DOM.\n *\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\n */\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // eslint-disable-next-line no-cond-assign\n  while ((outlet = searchNavNode(node))) {\n    const id = await outlet.getRouteId();\n    if (id) {\n      node = id.element;\n      id.element = undefined;\n      ids.push(id);\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve) => {\n    window.addEventListener('ionNavWillLoad', () => resolve(), { once: true });\n  });\n};\n/** Selector for all the outlets supported by the router. */\nconst OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(OUTLET_SELECTOR)) {\n    return root;\n  }\n  const outlet = root.querySelector(OUTLET_SELECTOR);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n/**\n * Returns whether the given redirect matches the given path segments.\n *\n * A redirect matches when the segments of the path and redirect.from are equal.\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\n */\nconst matchesRedirect = (segments, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > segments.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== segments[i]) {\n      return false;\n    }\n  }\n  return from.length === segments.length;\n};\n/** Returns the first redirect matching the path segments or undefined when no match found. */\nconst findRouteRedirect = (segments, redirects) => {\n  return redirects.find((redirect) => matchesRedirect(segments, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let score = 0;\n  for (let i = 0; i < len; i++) {\n    const routeId = ids[i];\n    const routeChain = chain[i];\n    // Skip results where the route id does not match the chain at the same index\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n    if (routeId.params) {\n      const routeIdParams = Object.keys(routeId.params);\n      // Only compare routes with the chain that have the same number of parameters.\n      if (routeIdParams.length === routeChain.segments.length) {\n        // Maps the route's params into a path based on the path variable names,\n        // to compare against the route chain format.\n        //\n        // Before:\n        // ```ts\n        // {\n        //  params: {\n        //    s1: 'a',\n        //    s2: 'b'\n        //  }\n        // }\n        // ```\n        //\n        // After:\n        // ```ts\n        // [':s1',':s2']\n        // ```\n        //\n        const pathWithParams = routeIdParams.map((key) => `:${key}`);\n        for (let j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\n            break;\n          }\n          // Weight path matches for the same index higher.\n          score++;\n        }\n      }\n    }\n    // Weight id matches\n    score++;\n  }\n  return score;\n};\n/**\n * Matches the segments against the chain.\n *\n * Returns:\n * - null when there is no match,\n * - a chain with the params properties updated with the parameter segments on match.\n */\nconst matchesSegments = (segments, chain) => {\n  const inputSegments = new RouterSegments(segments);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const chainSegments = chain[i].segments;\n    if (chainSegments[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of chainSegments) {\n        const data = inputSegments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      segments: route.segments,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave,\n    }));\n  }\n  return chain;\n};\n/**\n * Merges the route parameter objects.\n * Returns undefined when both parameters are undefined.\n */\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n/**\n * Finds the best match for the ids in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the RouteIDs.\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\n */\nconst findChainForIDs = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  for (const chain of chains) {\n    const score = matchesIDs(ids, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => {\n      var _a;\n      return ({\n        id: route.id,\n        segments: route.segments,\n        params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params),\n      });\n    });\n  }\n  return null;\n};\n/**\n * Finds the best match for the segments in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the segments.\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\n */\nconst findChainForSegments = (segments, chains) => {\n  let match = null;\n  let bestScore = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesSegments(segments, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > bestScore) {\n        bestScore = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\n/**\n * Computes the priority of a chain.\n *\n * Parameter segments are given a lower priority over fixed segments.\n *\n * Considering the following 2 chains matching the path /path/to/page:\n * - /path/to/:where\n * - /path/to/page\n *\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\n */\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (segment !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(segments) {\n    this.segments = segments.slice();\n  }\n  next() {\n    if (this.segments.length > 0) {\n      return this.segments.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\n/**\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\n *\n * The redirects are returned as a list of RouteRedirect.\n */\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter((el) => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map((el) => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\n/**\n * Extracts all the routes (that is <ion-route> elements inside the root).\n *\n * The routes are returned as a list of chains - the flattened tree.\n */\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\n/**\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\n *\n * Note: routes without a component are ignored together with their children.\n */\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter((el) => el.tagName === 'ION-ROUTE' && el.component)\n    .map((el) => {\n    const component = readProp(el, 'component');\n    return {\n      segments: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el),\n    };\n  });\n};\n/**\n * Flattens a RouterTree in a list of chains.\n *\n * Each chain represents a path from the root node to a terminal node.\n */\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\n/** Flattens a route node recursively and push each branch to the chains list. */\nconst flattenNode = (chain, chains, node) => {\n  chain = [\n    ...chain,\n    {\n      id: node.id,\n      segments: node.segments,\n      params: node.params,\n      beforeLeave: node.beforeLeave,\n      beforeEnter: node.beforeEnter,\n    },\n  ];\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getSegments());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getSegments();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, (processNextHandler) => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified path.\n   *\n   * @param path The path to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(path, direction = 'forward', animation) {\n    var _a;\n    if (path.startsWith('.')) {\n      const currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/';\n      // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\n      const url = new URL(path, `https://host/${currentPath}`);\n      path = url.pathname + url.search;\n    }\n    let parsedPath = parsePath(path);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /** Go back to previous page in the window.history. */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = findChainForIDs(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map((i) => i.id));\n      return false;\n    }\n    const segments = chainToSegments(chain);\n    if (!segments) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setSegments(segments, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\n    return true;\n  }\n  /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\n  onRedirectChanged() {\n    const segments = this.getSegments();\n    if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\n      this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\n    }\n  }\n  /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(segments, direction, animation) {\n    if (!segments) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(segments, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments: toSegments, queryString } = redirect.to;\n      this.setSegments(toSegments, direction, queryString);\n      redirectFrom = redirect.from;\n      segments = toSegments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = findChainForSegments(segments, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise((r) => (resolve = r));\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  /**\n   * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n   *\n   * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n   * Otherwise the beforeEnterHook hook of the target route is executed.\n   */\n  async runGuards(to = this.getSegments(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = findChainForSegments(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = findChainForSegments(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(segments, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setSegments(segments, direction, queryString) {\n    this.state++;\n    writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\n  }\n  getSegments() {\n    return readSegments(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(toSegments, redirectFromSegments) {\n    const from = this.previousPath;\n    const to = generatePath(toSegments);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target,\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true,\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"],"names":["r","registerInstance","e","createEvent","i","getElement","h","H","Host","c","componentOnReady","q","debounce","b","getIonMode","o","openURL","createColorClasses","Route","hostRef","ionRouteDataChanged","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writeSegments","history","root","direction","state","parsePath","pushState","replaceState","chainToSegments","chain","route","segment","param","params","slice","push","removePrefix","prefix","readSegments","loc","pathname","hash","qsStart","indexOf","substring","split","map","trim","printRoutes","routes","console","group","forEach","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","OUTLET_SELECTOR","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesSegments","inputSegments","RouterSegments","matchesDefault","allparams","chainSegments","data","next","mergeParams","beforeEnter","beforeLeave","a","assign","findChainForIDs","chains","match","maxMatches","_a","findChainForSegments","bestScore","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","runGuards","getSegments","canProceed","setSegments","writeNavStateRoot","onRoutesChanged","onRedirectChanged","bind","historyDirection","ev","detail","register","processNextHandler","back","startsWith","currentPath","URL","search","parsedPath","waitPromise","warn","safeWriteNavState","win","title","location","href","redirectFrom","toSegments","lock","unlock","p","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","redirectFromSegments","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","mode","attrs","rel","target","class","color","style","ion_route","ion_route_redirect","ion_router","ion_router_link"],"sourceRoot":"webpack:///"}