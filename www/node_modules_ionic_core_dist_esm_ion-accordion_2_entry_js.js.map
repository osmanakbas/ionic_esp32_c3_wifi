{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-accordion_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-88bdeaae.js';\nimport { i as chevronDown } from './index-d74f4afc.js';\nimport { c as config, b as getIonMode } from './ionic-global-00475c3a.js';\nimport { r as raf, t as transitionEndAsync, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers-4d272360.js';\n\nconst accordionIosCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}:host(.accordion-next) ::slotted(ion-item[slot=header]){--border-width:0.55px 0px 0.55px 0px}\";\n\nconst accordionMdCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}\";\n\nconst Accordion = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.updateListener = () => this.updateState(false);\n    this.state = 1 /* Collapsed */;\n    this.isNext = false;\n    this.isPrevious = false;\n    /**\n     * The value of the accordion. Defaults to an autogenerated\n     * value.\n     */\n    this.value = `ion-accordion-${accordionIds++}`;\n    /**\n     * If `true`, the accordion cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * The toggle icon to use. This icon will be\n     * rotated when the accordion is expanded\n     * or collapsed.\n     */\n    this.toggleIcon = chevronDown;\n    /**\n     * The slot inside of `ion-item` to\n     * place the toggle icon. Defaults to `'end'`.\n     */\n    this.toggleIconSlot = 'end';\n    this.setItemDefaults = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * For a11y purposes, we make\n       * the ion-item a button so users\n       * can tab to it and use keyboard\n       * navigation to get around.\n       */\n      ionItem.button = true;\n      ionItem.detail = false;\n      /**\n       * By default, the lines in an\n       * item should be full here, but\n       * only do that if a user has\n       * not explicitly overridden them\n       */\n      if (ionItem.lines === undefined) {\n        ionItem.lines = 'full';\n      }\n    };\n    this.getSlottedHeaderIonItem = () => {\n      const { headerEl } = this;\n      if (!headerEl) {\n        return;\n      }\n      /**\n       * Get the first ion-item\n       * slotted in the header slot\n       */\n      const slot = headerEl.querySelector('slot');\n      if (!slot) {\n        return;\n      }\n      // This is not defined in unit tests\n      const ionItem = slot.assignedElements &&\n        slot.assignedElements().find((el) => el.tagName === 'ION-ITEM');\n      return ionItem;\n    };\n    this.setAria = (expanded = false) => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * Get the native <button> element inside of\n       * ion-item because that is what will be focused\n       */\n      const root = getElementRoot(ionItem);\n      const button = root.querySelector('button');\n      if (!button) {\n        return;\n      }\n      button.setAttribute('aria-expanded', `${expanded}`);\n    };\n    this.slotToggleIcon = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      const { toggleIconSlot, toggleIcon } = this;\n      /**\n       * Check if there already is a toggle icon.\n       * If so, do not add another one.\n       */\n      const existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\n      if (existingToggleIcon) {\n        return;\n      }\n      const iconEl = document.createElement('ion-icon');\n      iconEl.slot = toggleIconSlot;\n      iconEl.lazy = false;\n      iconEl.classList.add('ion-accordion-toggle-icon');\n      iconEl.icon = toggleIcon;\n      iconEl.setAttribute('aria-hidden', 'true');\n      ionItem.appendChild(iconEl);\n    };\n    this.expandAccordion = (initialUpdate = false) => {\n      const { contentEl, contentElWrapper } = this;\n      if (initialUpdate || contentEl === undefined || contentElWrapper === undefined) {\n        this.state = 4 /* Expanded */;\n        return;\n      }\n      if (this.state === 4 /* Expanded */) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        raf(() => {\n          this.state = 8 /* Expanding */;\n          this.currentRaf = raf(async () => {\n            const contentHeight = contentElWrapper.offsetHeight;\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            contentEl.style.setProperty('max-height', `${contentHeight}px`);\n            await waitForTransition;\n            this.state = 4 /* Expanded */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 4 /* Expanded */;\n      }\n    };\n    this.collapseAccordion = (initialUpdate = false) => {\n      const { contentEl } = this;\n      if (initialUpdate || contentEl === undefined) {\n        this.state = 1 /* Collapsed */;\n        return;\n      }\n      if (this.state === 1 /* Collapsed */) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        this.currentRaf = raf(async () => {\n          const contentHeight = contentEl.offsetHeight;\n          contentEl.style.setProperty('max-height', `${contentHeight}px`);\n          raf(async () => {\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            this.state = 2 /* Collapsing */;\n            await waitForTransition;\n            this.state = 1 /* Collapsed */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 1 /* Collapsed */;\n      }\n    };\n    /**\n     * Helper function to determine if\n     * something should animate.\n     * If prefers-reduced-motion is set\n     * then we should not animate, regardless\n     * of what is set in the config.\n     */\n    this.shouldAnimate = () => {\n      if (typeof window === 'undefined') {\n        return false;\n      }\n      const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\n      if (prefersReducedMotion) {\n        return false;\n      }\n      const animated = config.get('animated', true);\n      if (!animated) {\n        return false;\n      }\n      if (this.accordionGroupEl && !this.accordionGroupEl.animated) {\n        return false;\n      }\n      return true;\n    };\n    this.updateState = async (initialUpdate = false) => {\n      const accordionGroup = this.accordionGroupEl;\n      const accordionValue = this.value;\n      if (!accordionGroup) {\n        return;\n      }\n      const value = accordionGroup.value;\n      const shouldExpand = Array.isArray(value) ? value.includes(accordionValue) : value === accordionValue;\n      if (shouldExpand) {\n        this.expandAccordion(initialUpdate);\n        this.isNext = this.isPrevious = false;\n      }\n      else {\n        this.collapseAccordion(initialUpdate);\n        /**\n         * When using popout or inset,\n         * the collapsed accordion items\n         * may need additional border radius\n         * applied. Check to see if the\n         * next or previous accordion is selected.\n         */\n        const nextAccordion = this.getNextSibling();\n        const nextAccordionValue = nextAccordion === null || nextAccordion === void 0 ? void 0 : nextAccordion.value;\n        if (nextAccordionValue !== undefined) {\n          this.isPrevious = Array.isArray(value) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\n        }\n        const previousAccordion = this.getPreviousSibling();\n        const previousAccordionValue = previousAccordion === null || previousAccordion === void 0 ? void 0 : previousAccordion.value;\n        if (previousAccordionValue !== undefined) {\n          this.isNext = Array.isArray(value) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\n        }\n      }\n    };\n    this.getNextSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const nextSibling = this.el.nextElementSibling;\n      if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return nextSibling;\n    };\n    this.getPreviousSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const previousSibling = this.el.previousElementSibling;\n      if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return previousSibling;\n    };\n  }\n  connectedCallback() {\n    var _a;\n    const accordionGroupEl = (this.accordionGroupEl = (_a = this.el) === null || _a === void 0 ? void 0 : _a.closest('ion-accordion-group'));\n    if (accordionGroupEl) {\n      this.updateState(true);\n      addEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n  disconnectedCallback() {\n    const accordionGroupEl = this.accordionGroupEl;\n    if (accordionGroupEl) {\n      removeEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n  componentDidLoad() {\n    this.setItemDefaults();\n    this.slotToggleIcon();\n    /**\n     * We need to wait a tick because we\n     * just set ionItem.button = true and\n     * the button has not have been rendered yet.\n     */\n    raf(() => {\n      /**\n       * Set aria label on button inside of ion-item\n       * once the inner content has been rendered.\n       */\n      const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n      this.setAria(expanded);\n    });\n  }\n  toggleExpanded() {\n    const { accordionGroupEl, value, state } = this;\n    if (accordionGroupEl) {\n      /**\n       * Because the accordion group may or may\n       * not allow multiple accordions open, we\n       * need to request the toggling of this\n       * accordion and the accordion group will\n       * make the decision on whether or not\n       * to allow it.\n       */\n      const expand = state === 1 /* Collapsed */ || state === 2 /* Collapsing */;\n      accordionGroupEl.requestAccordionToggle(value, expand);\n    }\n  }\n  render() {\n    const { disabled, readonly } = this;\n    const mode = getIonMode(this);\n    const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n    const headerPart = expanded ? 'header expanded' : 'header';\n    const contentPart = expanded ? 'content expanded' : 'content';\n    this.setAria(expanded);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-expanding': this.state === 8 /* Expanding */,\n        'accordion-expanded': this.state === 4 /* Expanded */,\n        'accordion-collapsing': this.state === 2 /* Collapsing */,\n        'accordion-collapsed': this.state === 1 /* Collapsed */,\n        'accordion-next': this.isNext,\n        'accordion-previous': this.isPrevious,\n        'accordion-disabled': disabled,\n        'accordion-readonly': readonly,\n        'accordion-animated': config.getBoolean('animated', true),\n      } }, h(\"div\", { onClick: () => this.toggleExpanded(), id: \"header\", part: headerPart, \"aria-controls\": \"content\", ref: (headerEl) => (this.headerEl = headerEl) }, h(\"slot\", { name: \"header\" })), h(\"div\", { id: \"content\", part: contentPart, role: \"region\", \"aria-labelledby\": \"header\", ref: (contentEl) => (this.contentEl = contentEl) }, h(\"div\", { id: \"content-wrapper\", ref: (contentElWrapper) => (this.contentElWrapper = contentElWrapper) }, h(\"slot\", { name: \"content\" })))));\n  }\n  static get delegatesFocus() { return true; }\n  get el() { return getElement(this); }\n};\nlet accordionIds = 0;\nAccordion.style = {\n  ios: accordionIosCss,\n  md: accordionMdCss\n};\n\nconst accordionGroupIosCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){border-bottom:none}\";\n\nconst accordionGroupMdCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion){-webkit-box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){margin-left:0;margin-right:0;margin-top:16px;margin-bottom:16px;border-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\n\nconst AccordionGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    /**\n     * If `true`, all accordions inside of the\n     * accordion group will animate when expanding\n     * or collapsing.\n     */\n    this.animated = true;\n    /**\n     * If `true`, the accordion group cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion group cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * Describes the expansion behavior for each accordion.\n     * Possible values are `\"compact\"` and `\"inset\"`.\n     * Defaults to `\"compact\"`.\n     */\n    this.expand = 'compact';\n  }\n  valueChanged() {\n    const { value, multiple } = this;\n    /**\n     * If accordion group does not\n     * let multiple accordions be open\n     * at once, but user passes an array\n     * just grab the first value.\n     */\n    if (!multiple && Array.isArray(value)) {\n      this.value = value[0];\n    }\n    else {\n      this.ionChange.emit({ value: this.value });\n    }\n  }\n  async disabledChanged() {\n    const { disabled } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.disabled = disabled;\n    }\n  }\n  async readonlyChanged() {\n    const { readonly } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.readonly = readonly;\n    }\n  }\n  async onKeydown(ev) {\n    const activeElement = document.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    /**\n     * Make sure focus is in the header, not the body, of the accordion. This ensures\n     * that if there are any interactable elements in the body, their keyboard\n     * interaction doesn't get stolen by the accordion. Example: using up/down keys\n     * in ion-textarea.\n     */\n    const activeAccordionHeader = activeElement.closest('ion-accordion [slot=\"header\"]');\n    if (!activeAccordionHeader) {\n      return;\n    }\n    const accordionEl = activeElement.tagName === 'ION-ACCORDION' ? activeElement : activeElement.closest('ion-accordion');\n    if (!accordionEl) {\n      return;\n    }\n    const closestGroup = accordionEl.closest('ion-accordion-group');\n    if (closestGroup !== this.el) {\n      return;\n    }\n    // If the active accordion is not in the current array of accordions, do not do anything\n    const accordions = await this.getAccordions();\n    const startingIndex = accordions.findIndex((a) => a === accordionEl);\n    if (startingIndex === -1) {\n      return;\n    }\n    let accordion;\n    if (ev.key === 'ArrowDown') {\n      accordion = this.findNextAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'ArrowUp') {\n      accordion = this.findPreviousAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'Home') {\n      accordion = accordions[0];\n    }\n    else if (ev.key === 'End') {\n      accordion = accordions[accordions.length - 1];\n    }\n    if (accordion !== undefined && accordion !== activeElement) {\n      accordion.focus();\n    }\n  }\n  async componentDidLoad() {\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    if (this.readonly) {\n      this.readonlyChanged();\n    }\n  }\n  /**\n   * @internal\n   */\n  async requestAccordionToggle(accordionValue, accordionExpand) {\n    const { multiple, value, readonly, disabled } = this;\n    if (readonly || disabled) {\n      return;\n    }\n    if (accordionExpand) {\n      /**\n       * If group accepts multiple values\n       * check to see if value is already in\n       * in values array. If not, add it\n       * to the array.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        const valueExists = processedValue.find((v) => v === accordionValue);\n        if (valueExists === undefined && accordionValue !== undefined) {\n          this.value = [...processedValue, accordionValue];\n        }\n      }\n      else {\n        this.value = accordionValue;\n      }\n    }\n    else {\n      /**\n       * If collapsing accordion, either filter the value\n       * out of the values array or unset the value.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        this.value = processedValue.filter((v) => v !== accordionValue);\n      }\n      else {\n        this.value = undefined;\n      }\n    }\n  }\n  findNextAccordion(accordions, startingIndex) {\n    const nextAccordion = accordions[startingIndex + 1];\n    if (nextAccordion === undefined) {\n      return accordions[0];\n    }\n    return nextAccordion;\n  }\n  findPreviousAccordion(accordions, startingIndex) {\n    const prevAccordion = accordions[startingIndex - 1];\n    if (prevAccordion === undefined) {\n      return accordions[accordions.length - 1];\n    }\n    return prevAccordion;\n  }\n  /**\n   * @internal\n   */\n  async getAccordions() {\n    return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\n  }\n  render() {\n    const { disabled, readonly, expand } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-group-disabled': disabled,\n        'accordion-group-readonly': readonly,\n        [`accordion-group-expand-${expand}`]: true,\n      }, role: \"presentation\" }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"readonly\": [\"readonlyChanged\"]\n  }; }\n};\nAccordionGroup.style = {\n  ios: accordionGroupIosCss,\n  md: accordionGroupMdCss\n};\n\nexport { Accordion as ion_accordion, AccordionGroup as ion_accordion_group };\n"],"names":["r","registerInstance","h","H","Host","i","getElement","e","createEvent","chevronDown","c","config","b","getIonMode","raf","t","transitionEndAsync","a","addEventListener","removeEventListener","g","getElementRoot","accordionIosCss","accordionMdCss","Accordion","hostRef","updateListener","updateState","state","isNext","isPrevious","value","accordionIds","disabled","readonly","toggleIcon","toggleIconSlot","setItemDefaults","ionItem","getSlottedHeaderIonItem","button","detail","lines","undefined","headerEl","slot","querySelector","assignedElements","find","el","tagName","setAria","expanded","root","setAttribute","slotToggleIcon","existingToggleIcon","iconEl","document","createElement","lazy","classList","add","icon","appendChild","expandAccordion","initialUpdate","contentEl","contentElWrapper","currentRaf","cancelAnimationFrame","shouldAnimate","contentHeight","offsetHeight","waitForTransition","style","setProperty","removeProperty","collapseAccordion","window","prefersReducedMotion","matchMedia","matches","animated","get","accordionGroupEl","accordionGroup","accordionValue","shouldExpand","Array","isArray","includes","nextAccordion","getNextSibling","nextAccordionValue","previousAccordion","getPreviousSibling","previousAccordionValue","nextSibling","nextElementSibling","previousSibling","previousElementSibling","_a","closest","expand","requestAccordionToggle","mode","headerPart","contentPart","class","getBoolean","onClick","toggleExpanded","id","part","ref","name","role","ios","md","accordionGroupIosCss","accordionGroupMdCss","AccordionGroup","ionChange","multiple","emit","getAccordions","accordions","accordion","ev","activeElement","activeAccordionHeader","accordionEl","closestGroup","startingIndex","findIndex","key","findNextAccordion","findPreviousAccordion","length","focus","disabledChanged","readonlyChanged","accordionExpand","groupValue","processedValue","valueExists","v","filter","prevAccordion","from","querySelectorAll","ion_accordion","ion_accordion_group"],"sourceRoot":"webpack:///"}