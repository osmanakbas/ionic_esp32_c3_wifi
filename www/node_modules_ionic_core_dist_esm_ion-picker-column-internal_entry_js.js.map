{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-picker-column-internal.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-88bdeaae.js';\nimport { b as getIonMode } from './ionic-global-00475c3a.js';\nimport { r as raf, g as getElementRoot } from './helpers-4d272360.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic-683b3b3c.js';\nimport { c as createColorClasses } from './theme-7670341c.js';\n\nconst pickerColumnInternalIosCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}\";\n\nconst pickerColumnInternalMdCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .picker-item-active{color:var(--ion-color-base)}\";\n\nconst PickerColumnInternal = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.isScrolling = false;\n    this.isColumnVisible = false;\n    this.isActive = false;\n    /**\n     * A list of options to be displayed in the picker\n     */\n    this.items = [];\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * If `true`, tapping the picker will\n     * reveal a number input keyboard that lets\n     * the user type in values for each picker\n     * column. This is useful when working\n     * with time pickers.\n     *\n     * @internal\n     */\n    this.numericInput = false;\n    this.centerPickerItemInView = (target, smooth = true) => {\n      const { el, isColumnVisible } = this;\n      if (isColumnVisible) {\n        // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)\n        const top = target.offsetTop - 3 * target.clientHeight + target.clientHeight / 2;\n        if (el.scrollTop !== top) {\n          el.scroll({\n            top,\n            left: 0,\n            behavior: smooth ? 'smooth' : undefined,\n          });\n        }\n      }\n    };\n    /**\n     * When ionInputModeChange is emitted, each column\n     * needs to check if it is the one being made available\n     * for text entry.\n     */\n    this.inputModeChange = (ev) => {\n      if (!this.numericInput) {\n        return;\n      }\n      const { useInputMode, inputModeColumn } = ev.detail;\n      /**\n       * If inputModeColumn is undefined then this means\n       * all numericInput columns are being selected.\n       */\n      const isColumnActive = inputModeColumn === undefined || inputModeColumn === this.el;\n      if (!useInputMode || !isColumnActive) {\n        this.setInputModeActive(false);\n        return;\n      }\n      this.setInputModeActive(true);\n    };\n    /**\n     * Setting isActive will cause a re-render.\n     * As a result, we do not want to cause the\n     * re-render mid scroll as this will cause\n     * the picker column to jump back to\n     * whatever value was selected at the\n     * start of the scroll interaction.\n     */\n    this.setInputModeActive = (state) => {\n      if (this.isScrolling) {\n        this.scrollEndCallback = () => {\n          this.isActive = state;\n        };\n        return;\n      }\n      this.isActive = state;\n    };\n    /**\n     * When the column scrolls, the component\n     * needs to determine which item is centered\n     * in the view and will emit an ionChange with\n     * the item object.\n     */\n    this.initializeScrollListener = () => {\n      const { el } = this;\n      let timeout;\n      let activeEl = this.activeItem;\n      const scrollCallback = () => {\n        raf(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n          }\n          if (!this.isScrolling) {\n            hapticSelectionStart();\n            this.isScrolling = true;\n          }\n          /**\n           * Select item in the center of the column\n           * which is the month/year that we want to select\n           */\n          const bbox = el.getBoundingClientRect();\n          const centerX = bbox.x + bbox.width / 2;\n          const centerY = bbox.y + bbox.height / 2;\n          const activeElement = el.shadowRoot.elementFromPoint(centerX, centerY);\n          if (activeEl !== null) {\n            activeEl.classList.remove(PICKER_COL_ACTIVE);\n          }\n          /**\n           * If we are selecting a new value,\n           * we need to run haptics again.\n           */\n          if (activeElement !== activeEl) {\n            hapticSelectionChanged();\n          }\n          activeEl = activeElement;\n          activeElement.classList.add(PICKER_COL_ACTIVE);\n          timeout = setTimeout(() => {\n            this.isScrolling = false;\n            hapticSelectionEnd();\n            /**\n             * Certain tasks (such as those that\n             * cause re-renders) should only be done\n             * once scrolling has finished, otherwise\n             * flickering may occur.\n             */\n            const { scrollEndCallback } = this;\n            if (scrollEndCallback) {\n              scrollEndCallback();\n              this.scrollEndCallback = undefined;\n            }\n            const dataIndex = activeElement.getAttribute('data-index');\n            /**\n             * If no value it is\n             * possible we hit one of the\n             * empty padding columns.\n             */\n            if (dataIndex === null) {\n              return;\n            }\n            const index = parseInt(dataIndex, 10);\n            const selectedItem = this.items[index];\n            if (selectedItem.value !== this.value) {\n              this.setValue(selectedItem.value);\n            }\n          }, 250);\n        });\n      };\n      /**\n       * Wrap this in an raf so that the scroll callback\n       * does not fire when component is initially shown.\n       */\n      raf(() => {\n        el.addEventListener('scroll', scrollCallback);\n        this.destroyScrollListener = () => {\n          el.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n  }\n  valueChange() {\n    if (this.isColumnVisible) {\n      /**\n       * Only scroll the active item into view when the picker column\n       * is actively visible to the user.\n       */\n      this.scrollActiveItemIntoView();\n    }\n  }\n  /**\n   * Only setup scroll listeners\n   * when the picker is visible, otherwise\n   * the container will have a scroll\n   * height of 0px.\n   */\n  componentWillLoad() {\n    const visibleCallback = (entries) => {\n      var _a;\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        this.isColumnVisible = true;\n        /**\n         * Because this initial call to scrollActiveItemIntoView has to fire before\n         * the scroll listener is set up, we need to manage the active class manually.\n         */\n        const oldActive = getElementRoot(this.el).querySelector(`.${PICKER_COL_ACTIVE}`);\n        oldActive === null || oldActive === void 0 ? void 0 : oldActive.classList.remove(PICKER_COL_ACTIVE);\n        this.scrollActiveItemIntoView();\n        (_a = this.activeItem) === null || _a === void 0 ? void 0 : _a.classList.add(PICKER_COL_ACTIVE);\n        this.initializeScrollListener();\n      }\n      else {\n        this.isColumnVisible = false;\n        if (this.destroyScrollListener) {\n          this.destroyScrollListener();\n          this.destroyScrollListener = undefined;\n        }\n      }\n    };\n    new IntersectionObserver(visibleCallback, { threshold: 0.001 }).observe(this.el);\n    const parentEl = this.el.closest('ion-picker-internal');\n    if (parentEl !== null) {\n      parentEl.addEventListener('ionInputModeChange', (ev) => this.inputModeChange(ev));\n    }\n  }\n  componentDidRender() {\n    var _a;\n    const { activeItem, items, isColumnVisible, value } = this;\n    if (isColumnVisible) {\n      if (activeItem) {\n        this.scrollActiveItemIntoView();\n      }\n      else if (((_a = items[0]) === null || _a === void 0 ? void 0 : _a.value) !== value) {\n        /**\n         * If the picker column does not have an active item and the current value\n         * does not match the first item in the picker column, that means\n         * the value is out of bounds. In this case, we assign the value to the\n         * first item to match the scroll position of the column.\n         *\n         */\n        this.setValue(items[0].value);\n      }\n    }\n  }\n  /** @internal  */\n  async scrollActiveItemIntoView() {\n    const activeEl = this.activeItem;\n    if (activeEl) {\n      this.centerPickerItemInView(activeEl, false);\n    }\n  }\n  /**\n   * Sets the value prop and fires the ionChange event.\n   * This is used when we need to fire ionChange from\n   * user-generated events that cannot be caught with normal\n   * input/change event listeners.\n   * @internal\n   */\n  async setValue(value) {\n    const { items } = this;\n    this.value = value;\n    const findItem = items.find((item) => item.value === value);\n    if (findItem) {\n      this.ionChange.emit(findItem);\n    }\n  }\n  get activeItem() {\n    return getElementRoot(this.el).querySelector(`.picker-item[data-value=\"${this.value}\"]`);\n  }\n  render() {\n    const { items, color, isActive, numericInput } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { tabindex: 0, class: createColorClasses(color, {\n        [mode]: true,\n        ['picker-column-active']: isActive,\n        ['picker-column-numeric-input']: numericInput,\n      }) }, h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), items.map((item, index) => {\n      return (h(\"div\", { class: \"picker-item\", \"data-value\": item.value, \"data-index\": index, onClick: (ev) => {\n          this.centerPickerItemInView(ev.target);\n        } }, item.text));\n    }), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\")));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChange\"]\n  }; }\n};\nconst PICKER_COL_ACTIVE = 'picker-item-active';\nPickerColumnInternal.style = {\n  ios: pickerColumnInternalIosCss,\n  md: pickerColumnInternalMdCss\n};\n\nexport { PickerColumnInternal as ion_picker_column_internal };\n"],"names":["r","registerInstance","e","createEvent","h","H","Host","i","getElement","b","getIonMode","raf","g","getElementRoot","a","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","c","createColorClasses","pickerColumnInternalIosCss","pickerColumnInternalMdCss","PickerColumnInternal","hostRef","ionChange","isScrolling","isColumnVisible","isActive","items","color","numericInput","centerPickerItemInView","target","smooth","el","top","offsetTop","clientHeight","scrollTop","scroll","left","behavior","undefined","inputModeChange","ev","detail","useInputMode","inputModeColumn","isColumnActive","setInputModeActive","state","scrollEndCallback","initializeScrollListener","timeout","activeEl","activeItem","scrollCallback","clearTimeout","bbox","getBoundingClientRect","centerX","x","width","centerY","y","height","activeElement","shadowRoot","elementFromPoint","classList","remove","PICKER_COL_ACTIVE","add","setTimeout","dataIndex","getAttribute","index","parseInt","selectedItem","value","setValue","addEventListener","destroyScrollListener","removeEventListener","scrollActiveItemIntoView","visibleCallback","entries","_a","isIntersecting","oldActive","querySelector","IntersectionObserver","threshold","observe","parentEl","closest","findItem","find","item","emit","mode","tabindex","class","map","onClick","text","style","ios","md","ion_picker_column_internal"],"sourceRoot":"webpack:///"}